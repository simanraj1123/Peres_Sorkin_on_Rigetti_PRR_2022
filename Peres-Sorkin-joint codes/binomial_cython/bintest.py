'''
File name -  bintest.py
Author - Simanraj Sadana
Date created - 2021-07-04
Latest edition - 2021-07-10, 16:25
Description -  
'''

from binomial import * 
import numpy as np
import time, pickle
import multiprocessing as mp

NSHOTS=10_000

param_list = np.array([[(2.1719217426376023, 6.268393886237732),
  (2.6356766096082542, 5.591118337364386),
  (1.43370219758619, 1.751534223664043)],
 [(2.0535894416516953, 0.8055112113224675),
  (0.5721730507490186, 1.8497868484219093),
  (1.7866428260861698, 0.26531682535732953)],
 [(1.40454387035453, 0.21664610714650617),
  (0.6012312746642916, 0.8079199466812678),
  (0.7330021638027037, 1.5166189325975235)],
 [(0.8627009771146144, 3.7359911551709732),
  (0.7574498158644474, 5.920558573378985),
  (2.16026435548721, 4.092347864187471)],
 [(1.9843852694212896, 4.372517249695397),
  (1.0143269501600451, 3.1865781939551217),
  (0.7127914734971253, 0.49594982585205516)],
 [(1.725853570232876, 2.4825591308030974),
  (1.6557062271652745, 4.962953565261901),
  (2.145013525095605, 5.133255299350571)],
 [(1.5056159236046198, 2.397911645068062),
  (1.1667677389372049, 1.019159151096154),
  (0.24190890059795428, 5.727250703093267)],
 [(2.425507852676142, 5.296566520565416),
  (1.7292436435361156, 5.910166317486659),
  (1.3436910611479604, 0.05775185379735403)],
 [(1.1150601873795833, 1.4743757593010134),
  (1.783631757564531, 3.1063995169007015),
  (2.582405591824962, 2.8109037293668555)],
 [(2.8305805576386525, 3.9604226398729714),
  (1.2991523147817339, 1.0406231073260077),
  (1.6242720604197163, 2.6425570166038934)],
 [(2.6291796521428186, 5.899830152275496),
  (2.00027818112629, 6.061937542706739),
  (2.269223522548113, 2.8093969638592826)],
 [(1.2205920589204415, 1.5624740573567633),
  (1.744618571590526, 3.5651053388515863),
  (1.810079315410142, 1.3522797912847706)],
 [(1.1940488055275278, 2.885204728659497),
  (1.315559580890979, 4.720088084275613),
  (2.5628380016506744, 4.770970493554419)],
 [(1.2765877810931812, 1.4204589100477838),
  (2.5304761749907314, 2.8363542008251765),
  (2.8465735061586623, 3.9280865648675514)],
 [(0.7604924219843661, 0.0540248696752599),
  (1.255899832200544, 4.634358051214256),
  (1.9695933737437494, 1.2450748927354163)],
 [(0.4383256173243932, 4.330454680974537),
  (2.416947513648755, 4.651509851197303),
  (1.5932002734616724, 1.407874091264325)],
 [(1.5821814660039262, 2.108962083045599),
  (0.49663434792922573, 1.4529579307123044),
  (2.178455161270646, 1.7314954672049265)],
 [(1.4605603549410788, 4.564280035284574),
  (2.732907505289064, 3.4923605713189585),
  (1.3256894392309686, 1.848631647173036)],
 [(1.6323398007348366, 0.6265777878943285),
  (1.9486061424147172, 3.298065960261993),
  (2.0637223697008498, 5.686516192746191)],
 [(1.1460724253996815, 2.7664138236193794),
  (0.21347412624478843, 4.235961905546003),
  (2.5618307311014594, 4.679398166125037)],
 [(2.4866708414774426, 3.085172779925245),
  (1.2466658773929287, 2.852909315155276),
  (2.2126189677017267, 3.648317668675838)],
 [(1.4585555814046318, 6.101944725367839),
  (1.2832123275056886, 1.6811204700123346),
  (1.2640611596202294, 3.3692976770785723)],
 [(1.5130438179789876, 1.4627794914348748),
  (1.1436237263819393, 0.9036257228256173),
  (0.20430027690869554, 4.0436488681461595)],
 [(0.2178282594728528, 2.9463245222927172),
  (2.618001727526286, 1.7350325415674601),
  (0.3526807293680785, 4.0470078443505555)],
 [(2.1657019376203848, 2.4122968862955814),
  (2.2628557891793015, 0.3540621599052396),
  (0.9454981235534816, 4.856927799861174)]], dtype=float)

def runbinom(param_list, queue, proc_no):
    print('Started')
    ta = time.time()
    all_params_cfs = []
    for param in param_list[:]:
        st = time.time()
        res = binomial_dist(param, NSHOTS, NSHOTS)
        res = np.array(res)
    
        all_cfs = []
        
        for i in range(4):
            data = res[:,i]
            data.sort()
            ca, cb = data[int(0.005 * len(data))], data[int(0.995 * len(data))]
        
            all_cfs.append([ca, cb])
        all_params_cfs.append(all_cfs)
#        print(all_cfs)
        print(f'Finished in {time.time() - st} secs. (from process {proc_no})')
    print(f'Finished. Total time taken is {time.time() - ta} sec')
    queue.put([proc_no, all_params_cfs])
    return all_params_cfs


if __name__ == '__main__':
    qout = mp.Queue()
    num_procs = 5
    inp = param_list
    incre = 5
    procs = [mp.Process(target=runbinom, args=(param_list[i*incre:(i+1)*incre],qout, i)) for i in range(num_procs)]
    for proc in procs:
        proc.start()
    for proc in procs:
        proc.join()

    all_results = []
    for proc in procs:
        all_results.append(qout.get())

    all_results = np.array(all_results)

    all_results = all_results[np.argsort(all_results[:,0])]
    
    res_collect = []
    for res in all_results[:,1]:
        res_collect = res_collect + res

    for res in res_collect:
        print(res, end='\n\n')

    with open('all_cfs_25_procs.pkl', 'wb') as file:
        pickle.dump(res_collect, file)
